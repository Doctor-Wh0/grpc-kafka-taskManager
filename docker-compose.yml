version: '3.8'
services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: taskmanagement
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  kafka:
    image: bitnami/kafka:latest
    ports:
    - '9094:9094'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_KRAFT_CLUSTER_ID=r4zt_wrqTRuT7W2NJsB_GA
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - app-network

  api:
    build:
      context: .
      dockerfile: ./TaskManagement.Api/Dockerfile
    ports:
      - "5030:8080"
    depends_on:
      - db
      - kafka
      - grpc
    environment:
      - ConnectionStrings__DefaultConnection=Host=db;Database=taskmanagement;Username=postgres;Password=postgres
      - GRPC_SERVER_ADDRESS=http://grpc:5001
      - KAFKA_BROKER=kafka:9092
    networks:
      - app-network

  grpc:
    build:
      context: .
      dockerfile: ./TaskManagement.GrpcService/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://+:5001
    networks:
      - app-network

  kafka-consumer:
    build:
      context: .
      dockerfile: ./TaskManagement.KafkaService/Dockerfile
    depends_on:
      - kafka
    environment:
      KAFKA_BROKER: kafka:9092
    networks:
      - app-network

volumes:
  postgres_data:
  kafka_data:

networks:
  app-network:
    driver: bridge